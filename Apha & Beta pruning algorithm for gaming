def alphabeta(depth, index, is_max, scores, alpha, beta):
    if depth == 3:
        return scores[index]

    if is_max:
        max_eval = float('-inf')
        for i in [0, 1]:
            val = alphabeta(depth + 1, index * 2 + i, False, scores, alpha, beta)
            max_eval = max(max_eval, val)
            alpha = max(alpha, val)
            if beta <= alpha:
                break  # beta cut-off
        return max_eval
    else:
        min_eval = float('inf')
        for i in [0, 1]:
            val = alphabeta(depth + 1, index * 2 + i, True, scores, alpha, beta)
            min_eval = min(min_eval, val)
            beta = min(beta, val)
            if beta <= alpha:
                break  
        return min_eval
scores = [3, 5, 2, 9, 12, 5, 23, 23]
best_value = alphabeta(0, 0, True, scores, float('-inf'), float('inf'))

print("Best value using Alpha-Beta Pruning:", best_value)
